{
  "stats": {
    "suites": 16,
    "tests": 51,
    "passes": 47,
    "pending": 1,
    "failures": 3,
    "start": "2024-03-06T22:40:53.018Z",
    "end": "2024-03-06T22:55:47.807Z",
    "duration": 894789,
    "testsRegistered": 51,
    "passPercent": 94,
    "pendingPercent": 1.9607843137254901,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cef46a09-84c2-40e1-827d-b8eeaa371e63",
      "title": "",
      "fullFile": "cypress\\e2e\\calendar\\calendar.spec.js",
      "file": "cypress\\e2e\\calendar\\calendar.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9793bfce-493e-4920-ad1f-36bc617a4285",
          "title": "calendar",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e1abf29a-b510-4aae-84ac-d91052d6f4fc",
              "title": "event overview modal",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "close event modal",
                  "fullTitle": "calendar event overview modal close event modal",
                  "timedOut": null,
                  "duration": 36563,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept({\n  method: 'POST',\n  url: '/api/activity/GetActivitiesForCalendar/'\n}).as('getActivities');\nconst newEventData = {\n  subscriberId: subscriberId,\n  name: `Event Title ${(0, _helpers.stringGen)(6)}`,\n  id: salesRepUserId,\n  globalUserId: salesRepGlobalUserId,\n  userName: salesRepName,\n  globalCompanyId: '',\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 23:00`,\n  endTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 23:30`\n};\ncy.addNewEventAPI(false, newEventData).then(response => {\n  calId = response.body;\n  const modalData = {\n    eventName: newEventData.name,\n    type: 'close'\n  };\n  cy.reload();\n  cy.wait('@getActivities');\n  cy.get('.fc-month-view').contains(newEventData.name).click();\n  cy.viewEventModalOverviewEditClose(modalData);\n  console.log(calId);\n  cy.removeEventAPI(calId, false, userData);\n});",
                  "err": {},
                  "uuid": "8750d9fc-4770-4c6e-bc56-b4ab40fb84b1",
                  "parentUUID": "e1abf29a-b510-4aae-84ac-d91052d6f4fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "populate entire event and see details on event overview - all day event",
                  "fullTitle": "calendar event overview modal populate entire event and see details on event overview - all day event",
                  "timedOut": null,
                  "duration": 40998,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const eventDescription = 'This is a description';\nconst newEventData = {\n  subscriberId: subscriberId,\n  globalUserId: salesRepGlobalUserId,\n  id: salesRepUserId,\n  userName: salesRepName,\n  name: `Event Title ${(0, _helpers.stringGen)(6)}`,\n  description: `<p>${eventDescription}</p>`,\n  isAllDay: true,\n  location: 'Manchester',\n  isRecurring: false,\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 00:00`,\n  endTime: '',\n  dealId\n};\nconst eventValidationObject = {\n  eventHeader: newEventData.name,\n  visibility: 'private',\n  publicPrivateIconClass: 'fa-eye-slash',\n  appearAs: 'free',\n  busyFreeIconClass: 'fa-user',\n  isAllDay: true,\n  allDayDate: (0, _moment.default)().format('DD-MMM-YY'),\n  startDateTime: '',\n  endDateTime: '',\n  eventOwnerUsername: salesRepName,\n  categoryName: 'meeting external',\n  categoryColour: 'rgb(242, 199, 72)',\n  companyNameDetails: companyName,\n  location: newEventData.location,\n  dealNameDetails: dealName,\n  reminderTime: '15 minutes',\n  attachmentName: '158023.png',\n  descriptionBody: eventDescription\n};\ncy.addEventWithAllData(globalCompanyID, newEventData).then(response => {\n  cy.intercept('/api/activity/GetActivitiesForCalendar/').as('getActivities');\n  cy.reload();\n  cy.wait('@getActivities');\n  cy.get('.fc-month-view').contains(newEventData.name).click();\n  cy.validateEventOverviewModal(true, eventValidationObject);\n  cy.removeEventAPI(response.body, false, userData);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 25000ms: Expected to find content: 'all day' within the element: <div.data-field> but never did.",
                    "estack": "AssertionError: Timed out retrying after 25000ms: Expected to find content: 'all day' within the element: <div.data-field> but never did.\n    at Context.eval (webpack:///./cypress/support/commands/events.js:114:13)",
                    "diff": null
                  },
                  "uuid": "ecd3e455-b336-4f9a-b5fa-90f8dd8a05ac",
                  "parentUUID": "e1abf29a-b510-4aae-84ac-d91052d6f4fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "minimum amount of data added",
                  "fullTitle": "calendar event overview modal minimum amount of data added",
                  "timedOut": null,
                  "duration": 38775,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const newEventData = {\n  subscriberId: subscriberId,\n  name: `Event Title ${(0, _helpers.stringGen)(6)}`,\n  id: salesRepUserId,\n  globalUserId: salesRepGlobalUserId,\n  userName: salesRepName,\n  globalCompanyId: '',\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 22:00`,\n  endTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 22:30`\n};\ncy.addNewEventAPI(true, newEventData).then(response => {\n  calId = response.body;\n  const eventValidationObject = {\n    eventHeader: newEventData.name,\n    visibility: 'public',\n    publicPrivateIconClass: 'fa-eye',\n    appearAs: 'busy',\n    busyFreeIconClass: 'fa-user-times',\n    isAllDay: false,\n    startDateTime: `${(0, _moment.default)().format('DD-MMM-YY')} - 11:00 PM`,\n    endDateTime: `${(0, _moment.default)().format('DD-MMM-YY')} - 11:30 PM`,\n    eventOwnerUsername: salesRepName\n  };\n  cy.reload();\n  cy.get('.fc-month-view').contains(newEventData.name).click();\n  cy.validateEventOverviewModal(false, eventValidationObject);\n  cy.removeEventAPI(calId, false, userData);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 25000ms: Expected to find content: '06-Mar-24 - 11:00 PM' within the element: <div.data-field> but never did.",
                    "estack": "AssertionError: Timed out retrying after 25000ms: Expected to find content: '06-Mar-24 - 11:00 PM' within the element: <div.data-field> but never did.\n    at Context.eval (webpack:///./cypress/support/commands/events.js:105:13)",
                    "diff": null
                  },
                  "uuid": "5b39b28c-b4d7-4c2e-b5b6-157f17acf294",
                  "parentUUID": "e1abf29a-b510-4aae-84ac-d91052d6f4fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "read only when logged in user did not create the event",
                  "fullTitle": "calendar event overview modal read only when logged in user did not create the event",
                  "timedOut": null,
                  "duration": 14664,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newEventData = {\n  subscriberId: subscriberId,\n  name: `Event Title ${(0, _helpers.stringGen)(6)}`,\n  id: '15869',\n  globalUserId: salesRepGlobalUserId,\n  userName: 'Jay Jay Okocha',\n  globalCompanyId: '',\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 23:00`,\n  endTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 23:30`,\n  inviteeGlobalUserId: salesRepGlobalUserId,\n  inviteeUserName: salesRepName\n};\ncy.addNewEventAPI(true, newEventData).then(response => {\n  calId = response.body;\n  const modalData = {\n    eventName: newEventData.name,\n    type: 'readOnly'\n  };\n  cy.reload();\n  cy.wait(4000);\n  cy.get('.fc-month-view').contains(newEventData.name).click();\n  cy.viewEventModalOverviewEditClose(modalData);\n  console.log(calId);\n  cy.removeEventAPI(calId, false, userData);\n});",
                  "err": {},
                  "uuid": "a81e2079-4d88-4068-b09c-67114c308270",
                  "parentUUID": "e1abf29a-b510-4aae-84ac-d91052d6f4fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8750d9fc-4770-4c6e-bc56-b4ab40fb84b1",
                "a81e2079-4d88-4068-b09c-67114c308270"
              ],
              "failures": [
                "ecd3e455-b336-4f9a-b5fa-90f8dd8a05ac",
                "5b39b28c-b4d7-4c2e-b5b6-157f17acf294"
              ],
              "pending": [],
              "skipped": [],
              "duration": 131000,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3f34268f-9064-4991-ae75-9e5884f98593",
              "title": "functionality",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create an event - with category and event displays relevent colour on cal",
                  "fullTitle": "calendar functionality should create an event - with category and event displays relevent colour on cal",
                  "timedOut": null,
                  "duration": 29662,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept({\n  method: 'POST',\n  url: '/api/CalendarEvent/SaveCalendarEvent'\n}).as('newCalID');\ncy.intercept('/api/activity/GetActivitiesForCalendar/').as('getActivities');\ncy.addEventOnCal(newEventCat, false); // check event is displayed on calendar month view\ncy.wait('@newCalID').then(xhr => {\n  const calendarID = xhr.response.body;\n  cy.wait('@getActivities');\n  cy.reload();\n  cy.get('.fc-month-view').contains(newEventCat.eventTitle);\n  cy.get(`.fc-day-grid-event.fc-h-event.fc-event.fc-start.fc-end.fc-draggable[style=\"background-color:${colour};border-color:${colour}\"]`).contains(newEventCat.eventTitle);\n  cy.removeEventAPI(calendarID, false, userData);\n});",
                  "err": {
                    "message": "CypressError: Timed out retrying after 25000ms: `cy.select()` failed because it could not find a single `<option>` with value, index, or text matching: `cat name rgy`\n\nhttps://on.cypress.io/select",
                    "estack": "CypressError: Timed out retrying after 25000ms: `cy.select()` failed because it could not find a single `<option>` with value, index, or text matching: `cat name rgy`\n\nhttps://on.cypress.io/select\n    at getOptions (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:136389:80)\n    at tryCatcher (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise.attempt.Promise.try (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:8592:29)\n    at retryOptions (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:136427:67)\n    at tryCatcher (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise.attempt.Promise.try (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:8592:29)\n    at whenStable (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:152495:65)\n    at <unknown> (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:151949:14)\n    at tryCatcher (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:9435:18)\n    at Promise._fulfill (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:9379:18)\n    at <unknown> (https://develop.firstfreight.com/__cypress/runner/cypress_runner.js:10993:46)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/support/commands/util.js:25:43)",
                    "diff": null
                  },
                  "uuid": "eaf6ed85-a5e9-4e7e-913d-1d5e75720392",
                  "parentUUID": "3f34268f-9064-4991-ae75-9e5884f98593",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should edit event",
                  "fullTitle": "calendar functionality should edit event",
                  "timedOut": null,
                  "duration": 20881,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept({\n  method: 'POST',\n  url: '/api/CalendarEvent/SaveCalendarEvent'\n}).as('newCalID');\nconst newEventData = {\n  subscriberId: subscriberId,\n  name: `Event Title ${(0, _helpers.stringGen)(6)}`,\n  id: salesRepUserId,\n  globalUserId: salesRepGlobalUserId,\n  userName: salesRepName,\n  globalCompanyId: '',\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 23:00`,\n  endTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 23:30`\n};\ncy.addNewEventAPI(false, newEventData).then(response => {\n  calId = response.body;\n  cy.log(calId);\n  cy.location(response.body);\n});\nconst modalData = {\n  eventName: newEventData.name,\n  type: 'edit'\n};\ncy.reload();\ncy.wait(3000);\ncy.get('.fc-month-view').contains(newEventData.name).click();\ncy.viewEventModalOverviewEditClose(modalData);\nlet newChangeEvent = {\n  eventTitle: `Edited Event Title ${(0, _helpers.stringGen)(4)}`\n};\ncy.wait(4000);\ncy.get('#txtEventTitle').should('be.visible'); // Change Title\ncy.get('#txtEventTitle').clear();\ncy.get('#txtEventTitle').type(newChangeEvent.eventTitle); // Save\ncy.saveEvent();\ncy.wait('@newCalID').then(xhr => {\n  const calendarID = xhr.response.body;\n  cy.get('.fc-month-view').contains(newChangeEvent.eventTitle);\n  cy.removeEventAPI(calendarID, false, userData);\n});",
                  "err": {},
                  "uuid": "c4eaabdf-f132-4b85-87a8-2a656e4dd688",
                  "parentUUID": "3f34268f-9064-4991-ae75-9e5884f98593",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "delete event",
                  "fullTitle": "calendar functionality delete event",
                  "timedOut": null,
                  "duration": 21847,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept({\n  method: 'POST',\n  url: '/api/activity/GetActivitiesForCalendar/'\n}).as('getActivities');\nconst newEventData = {\n  subscriberId: subscriberId,\n  name: `Event Title ${(0, _helpers.stringGen)(6)}`,\n  id: salesRepUserId,\n  globalUserId: salesRepGlobalUserId,\n  userName: salesRepName,\n  globalCompanyId: '',\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 23:00`,\n  endTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 23:30`\n};\ncy.addNewEventAPI(false, newEventData).then(response => {\n  calId = response.body;\n});\nconst modalData = {\n  eventName: newEventData.name,\n  type: 'edit'\n};\ncy.reload(true);\ncy.wait('@getActivities');\ncy.get('.fc-month-view').contains(newEventData.name).click();\ncy.viewEventModalOverviewEditClose(modalData);\ncy.deleteEventOnCal('', '', newEventData.name);",
                  "err": {},
                  "uuid": "9493f6f0-12e6-4a4e-8377-97e0f24d1f42",
                  "parentUUID": "3f34268f-9064-4991-ae75-9e5884f98593",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "add all day event",
                  "fullTitle": "calendar functionality add all day event",
                  "timedOut": null,
                  "duration": 24406,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept({\n  method: 'POST',\n  url: '/api/activity/GetActivitiesForCalendar/'\n}).as('getActivities');\ncy.intercept({\n  method: 'POST',\n  url: '/api/CalendarEvent/SaveCalendarEvent'\n}).as('newCalID');\nconst eventTitle = `All Day ${(0, _helpers.numGen)(4)}`;\nconst newEventAllDay = {\n  eventTitle\n};\nconst modalData = {\n  eventName: eventTitle,\n  type: 'edit'\n};\ncy.reload(true);\ncy.wait('@getActivities');\ncy.openEventForm();\ncy.fillForm(_forms.eventForm, newEventAllDay);\ncy.checkAllDay();\ncy.get('.col-md-3.col-mid-box.timeBox').should('not.be.visible').should('have.css', 'display').and('eq', 'none');\ncy.saveEvent();\ncy.wait('@newCalID').then(xhr => {\n  const calendarID = xhr.response.body;\n  cy.wait('@getActivities');\n  cy.get('.fc-month-view').contains(eventTitle).click({\n    force: true\n  });\n  cy.viewEventModalOverviewEditClose(modalData);\n  cy.get('#chkAllDay').should('be.checked');\n  cy.removeEventAPI(calendarID, false, userData);\n  cy.reload();\n});",
                  "err": {},
                  "uuid": "7739d852-a0f6-439c-bbce-63e340522259",
                  "parentUUID": "3f34268f-9064-4991-ae75-9e5884f98593",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "add event with attachment",
                  "fullTitle": "calendar functionality add event with attachment",
                  "timedOut": null,
                  "duration": 30082,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept({\n  method: 'POST',\n  url: '/api/activity/GetActivitiesForCalendar/'\n}).as('getActivities');\ncy.intercept({\n  method: 'POST',\n  url: '/api/CalendarEvent/SaveCalendarEvent'\n}).as('newCalID');\nconst eventTitle = `All Day ${(0, _helpers.numGen)(4)}`;\nconst newEventAllDay = {\n  eventTitle\n};\nconst modalData = {\n  eventName: eventTitle,\n  type: 'edit'\n};\ncy.reload().wait('@getActivities');\ncy.openEventForm();\ncy.fillForm(_forms.eventForm, newEventAllDay);\ncy.addAttachment();\ncy.saveEvent();\ncy.wait('@newCalID').then(xhr => {\n  const calendarID = xhr.response.body;\n  cy.wait('@getActivities');\n  cy.get('.fc-month-view').contains(eventTitle).click();\n  cy.viewEventModalOverviewEditClose(modalData);\n  cy.get('.attachment:nth-of-type(2) .col-file-name').should('have.text', 'sloth.jpg');\n  cy.removeEventAPI(calendarID, false, userData);\n  cy.reload();\n});",
                  "err": {},
                  "uuid": "f1d347ce-0947-4b39-8f3d-8e04baca3387",
                  "parentUUID": "3f34268f-9064-4991-ae75-9e5884f98593",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "add guests to event normal and add",
                  "fullTitle": "calendar functionality add guests to event normal and add",
                  "timedOut": null,
                  "duration": 35873,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept({\n  method: 'POST',\n  url: '/api/activity/GetActivitiesForCalendar/'\n}).as('getActivities');\ncy.intercept({\n  method: 'POST',\n  url: '/api/CalendarEvent/SaveCalendarEvent'\n}).as('newCalID');\nconst userInput = users['salesManager'].details.name;\nconst eventTitle = `All Day ${(0, _helpers.numGen)(4)}`;\nconst newEventAllDay = {\n  eventTitle\n};\nconst modalData = {\n  eventName: eventTitle,\n  type: 'edit'\n};\ncy.reload();\ncy.wait('@getActivities');\ncy.openEventForm();\ncy.fillForm(_forms.eventForm, newEventAllDay);\ncy.addGuestToEvent(userInput);\ncy.get('ul#select2-ddlInvites-results .select2-results__option.select2-results__option--highlighted .col > p').should($invitee => {\n  expect($invitee, '3 items').to.have.length(3);\n  expect($invitee.eq(0), 'first item').to.contain(userInput);\n  expect($invitee.eq(1), 'second item').to.contain(users['salesManager'].details.email);\n  expect($invitee.eq(2), 'second item').to.contain(users['salesManager'].details.country);\n});\ncy.get('.select2-search.select2-search--dropdown .select2-search__field').type('{enter}');\ncy.checkInviteeList(userInput);\ncy.saveEvent();\ncy.get('.swal2-cancel.left-cancel.swal2-styled').click();\ncy.wait('@newCalID').then(xhr => {\n  cy.wait('@getActivities');\n  const calendarID = xhr.response.body;\n  cy.get('.fc-month-view').contains(eventTitle).click();\n  cy.viewEventModalOverviewEditClose(modalData);\n  cy.checkInviteeList(userInput);\n  cy.removeEventAPI(calendarID, false, userData);\n  cy.reload();\n});",
                  "err": {},
                  "uuid": "7e3ae1d2-99ff-4857-a6a9-ed566060b65a",
                  "parentUUID": "3f34268f-9064-4991-ae75-9e5884f98593",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "d8e8700a-97bc-4f10-a522-79028acfbc07",
                  "title": "company and deals on event",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Add event and assign to company. See event on company page",
                      "fullTitle": "calendar functionality company and deals on event Add event and assign to company. See event on company page",
                      "timedOut": null,
                      "duration": 42722,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.intercept({\n  method: 'POST',\n  url: '/api/CalendarEvent/SaveCalendarEvent'\n}).as('newCalID');\nconst newEventComDeal = {\n  eventTitle: eventName\n};\ncy.openEventForm();\ncy.fillForm(_forms.eventForm, newEventComDeal);\ncy.addNewCompanyToEvent(companyName);\ncy.addNewDealToEvent(newDealName);\ncy.saveEvent();\ncy.wait('@newCalID').then(xhr => {\n  calendarID = xhr.response.body;\n  cy.get('.fc-month-view').contains(eventName);\n});\ncy.navigateAndCheckURL((0, _urls.COMPANY_DETAIL_URL)(newCompanyId));\ncy.navigateToTab('events');\nconst eventArray = [eventName];\ncy.eventsTabList(eventArray);",
                      "err": {},
                      "uuid": "819c67e5-d1fd-4356-8b9f-471ad177dc63",
                      "parentUUID": "d8e8700a-97bc-4f10-a522-79028acfbc07",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Add event and assign to deal. See event on deal page",
                      "fullTitle": "calendar functionality company and deals on event Add event and assign to deal. See event on deal page",
                      "timedOut": null,
                      "duration": 7396,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealID));\ncy.navigateToDealTab('events');\nconst eventArray = [eventName];\ncy.eventsTabList(eventArray);\ncy.removeEventAPI(calendarID, false, userData);",
                      "err": {},
                      "uuid": "98ffc073-7bb7-485e-9465-13e4bcf04508",
                      "parentUUID": "d8e8700a-97bc-4f10-a522-79028acfbc07",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "819c67e5-d1fd-4356-8b9f-471ad177dc63",
                    "98ffc073-7bb7-485e-9465-13e4bcf04508"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 50118,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "5004b609-5a3f-4a07-88e5-fc8eef0acf5e",
                  "title": "recurring events",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "66f5c08a-fc86-4c13-bc3e-14d1df29bc61",
                      "title": "daily recurring events",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "add daily recurring event",
                          "fullTitle": "calendar functionality recurring events daily recurring events add daily recurring event",
                          "timedOut": null,
                          "duration": 36063,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.fillForm(_forms.eventForm, dailyEvent);\ncy.recurringEventOption('Daily');\ncy.saveEvent();\ncy.wait('@newCalID', {\n  timeout: 120000\n}).then(xhr => {\n  cy.wait('@getActivities');\n  cy.checkRecurringEvents(eventName, 4);\n  cy.prevNextToggle('next');\n  cy.checkRecurringEvents(eventName, 2);\n  cy.removeEventAPI(xhr.response.body, true, userData);\n});",
                          "err": {},
                          "uuid": "5a8950cc-cc1a-4610-bf37-322df681ffcd",
                          "parentUUID": "66f5c08a-fc86-4c13-bc3e-14d1df29bc61",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "delete one daily recurring event",
                          "fullTitle": "calendar functionality recurring events daily recurring events delete one daily recurring event",
                          "timedOut": null,
                          "duration": 48705,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const eventName = `DAILY RECURRING_${(0, _helpers.stringGen)(6)}`;\nconst eventData = {\n  subscriberId: subscriberId,\n  globalUserId: salesRepGlobalUserId,\n  id: salesRepUserId,\n  userName: salesRepName,\n  name: eventName,\n  isAllDay: false,\n  isRecurring: true,\n  recurringOccurence: 'Daily',\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 09:00`,\n  endTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 10:00`\n};\ncy.addRecurringEvent(eventData).then(response => {\n  const eventId = response.body;\n  cy.intercept(`/api/CalendarEvent/DeleteCalendarEvent/?calendarEventId=**`).as('waitForDelete');\n  cy.intercept('/api/activity/GetActivitiesForCalendar/').as('getActivities');\n  cy.reload();\n  cy.wait('@getActivities');\n  cy.get(`.fc-content:contains(\"${eventName}\")`).its('length').then(length => {\n    cy.selectFirstRecurring(eventName);\n    cy.viewEventModalOverviewEditClose({\n      eventName: eventName,\n      type: 'edit'\n    });\n    cy.deleteEventOnCal('recurring', 'individual', eventName);\n    cy.wait('@waitForDelete');\n    cy.wait('@getActivities');\n    cy.reload();\n    cy.wait('@getActivities');\n    cy.get(recurringSelector(eventName)).should('have.length', length - 1);\n    cy.removeEventAPI(eventId, true, userData);\n  });\n});",
                          "err": {},
                          "uuid": "c9e30a3a-1267-436e-9471-99debb7104ff",
                          "parentUUID": "66f5c08a-fc86-4c13-bc3e-14d1df29bc61",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "delete all daily recurring events",
                          "fullTitle": "calendar functionality recurring events daily recurring events delete all daily recurring events",
                          "timedOut": null,
                          "duration": 53008,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const eventName = `DAILY RECURRING_${(0, _helpers.stringGen)(6)}`;\nconst eventData = {\n  subscriberId: subscriberId,\n  globalUserId: salesRepGlobalUserId,\n  id: salesRepUserId,\n  userName: salesRepName,\n  name: eventName,\n  isAllDay: false,\n  isRecurring: true,\n  recurringOccurence: 'Daily',\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 09:00`,\n  endTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 10:00`\n};\ncy.addRecurringEvent(eventData).then(response => {\n  const eventId = response.body;\n  cy.intercept(`/api/CalendarEvent/DeleteCalendarEvent/?calendarEventId=**`).as('waitForDelete');\n  cy.intercept('/api/activity/GetActivitiesForCalendar/').as('getActivities');\n  cy.reload();\n  cy.wait('@getActivities');\n  cy.selectFirstRecurring(eventName);\n  cy.viewEventModalOverviewEditClose({\n    eventName: eventName,\n    type: 'edit'\n  });\n  cy.deleteEventOnCal('recurring', 'all', eventName);\n  cy.wait('@waitForDelete');\n  cy.wait('@getActivities');\n  cy.reload();\n  cy.wait('@getActivities');\n  cy.get(recurringSelector(eventName)).should('not.exist');\n  cy.prevNextToggle('next');\n  cy.get(recurringSelector(eventName)).should('not.exist');\n});",
                          "err": {},
                          "uuid": "a15134be-068a-4cef-ba71-3a1dfeafbc78",
                          "parentUUID": "66f5c08a-fc86-4c13-bc3e-14d1df29bc61",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "5a8950cc-cc1a-4610-bf37-322df681ffcd",
                        "c9e30a3a-1267-436e-9471-99debb7104ff",
                        "a15134be-068a-4cef-ba71-3a1dfeafbc78"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 137776,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "34156c16-57db-4101-85f0-1669e048fbb0",
                      "title": "weekly recurring events",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "add weekly recurring event",
                          "fullTitle": "calendar functionality recurring events weekly recurring events add weekly recurring event",
                          "timedOut": null,
                          "duration": 23080,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.fillForm(_forms.eventForm, weeklyEvent);\ncy.recurringEventOption('Weekly');\ncy.saveEvent();\ncy.wait('@newCalID').then(xhr => {\n  cy.wait('@getActivities');\n  cy.checkRecurringEvents(eventName, 0);\n  cy.prevNextToggle('next');\n  cy.checkRecurringEvents(eventName, 3);\n  cy.removeEventAPI(xhr.response.body, true, userData);\n});",
                          "err": {},
                          "uuid": "90eac311-cf26-4d65-ab1e-11f45b7ae3fb",
                          "parentUUID": "34156c16-57db-4101-85f0-1669e048fbb0",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "delete one weekly recurring event",
                          "fullTitle": "calendar functionality recurring events weekly recurring events delete one weekly recurring event",
                          "timedOut": null,
                          "duration": 35191,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const eventName = `WEEKLY RECURRING_${(0, _helpers.stringGen)(6)}`;\nconst eventData = {\n  subscriberId: subscriberId,\n  globalUserId: salesRepGlobalUserId,\n  id: salesRepUserId,\n  userName: salesRepName,\n  name: eventName,\n  isAllDay: false,\n  isRecurring: true,\n  recurringOccurence: 'Weekly',\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 09:00`,\n  endTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 10:00`\n};\ncy.addRecurringEvent(eventData).then(response => {\n  const eventId = response.body;\n  cy.intercept({\n    method: 'GET',\n    url: `/api/CalendarEvent/GetCalendarEvent?calendarEventId=${eventId}&userId=${salesRepUserId}&subscriberId=${subscriberId}`\n  }).as('selectEvent');\n  cy.intercept(`/api/CalendarEvent/DeleteCalendarEvent/?calendarEventId=${eventId}&deleteRecurring=${false}&userId=${salesRepUserId}&subscriberId=${subscriberId}&cancellationEmails=false`).as('waitForDelete');\n  cy.intercept('/api/activity/GetActivitiesForCalendar/').as('getActivities');\n  cy.reload();\n  cy.wait('@getActivities');\n  cy.get(`.fc-content:contains(\"${eventName}\")`).its('length').then(length => {\n    console.log(length);\n    cy.selectFirstRecurring(eventName);\n    cy.viewEventModalOverviewEditClose({\n      eventName: eventName,\n      type: 'edit'\n    });\n    cy.wait('@selectEvent');\n    cy.deleteEventOnCal('recurring', 'individual', eventName);\n    cy.wait('@waitForDelete');\n    cy.wait('@getActivities');\n    cy.reload();\n    cy.wait('@getActivities');\n    cy.get(recurringSelector(eventName)).should('have.length', length - 1);\n    cy.removeEventAPI(eventId, true, userData);\n  });\n});",
                          "err": {},
                          "uuid": "1c21d296-43b9-467c-9025-0fda9c635468",
                          "parentUUID": "34156c16-57db-4101-85f0-1669e048fbb0",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "delete all weekly recurring events",
                          "fullTitle": "calendar functionality recurring events weekly recurring events delete all weekly recurring events",
                          "timedOut": null,
                          "duration": 38166,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const eventName = `WEEKLY RECURRING_${(0, _helpers.stringGen)(6)}`;\nconst eventData = {\n  subscriberId: subscriberId,\n  globalUserId: salesRepGlobalUserId,\n  id: salesRepUserId,\n  userName: salesRepName,\n  name: eventName,\n  isAllDay: false,\n  isRecurring: true,\n  recurringOccurence: 'Weekly',\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 09:00`,\n  endTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 10:00`\n};\ncy.addRecurringEvent(eventData).then(response => {\n  const eventId = response.body;\n  cy.intercept(`/api/CalendarEvent/DeleteCalendarEvent/?calendarEventId=${eventId}&deleteRecurring=${true}&userId=${salesRepUserId}&subscriberId=${subscriberId}&cancellationEmails=false`).as('waitForDelete');\n  cy.intercept('/api/activity/GetActivitiesForCalendar/').as('getActivities');\n  cy.intercept({\n    method: 'GET',\n    url: `/api/CalendarEvent/GetCalendarEvent?calendarEventId=${eventId}&userId=${salesRepUserId}&subscriberId=${subscriberId}`\n  }).as('selectEvent');\n  cy.reload();\n  cy.wait('@getActivities');\n  cy.selectFirstRecurring(eventName);\n  cy.viewEventModalOverviewEditClose({\n    eventName: eventName,\n    type: 'edit'\n  });\n  cy.wait('@selectEvent');\n  cy.deleteEventOnCal('recurring', 'all', eventName);\n  cy.wait('@waitForDelete');\n  cy.wait('@getActivities');\n  cy.reload();\n  cy.wait('@getActivities');\n  cy.get(recurringSelector(eventName)).should('not.exist');\n  cy.prevNextToggle('next');\n  cy.get(recurringSelector(eventName)).should('not.exist');\n});",
                          "err": {},
                          "uuid": "5e091819-80dc-49ca-b561-76c39a3faf7e",
                          "parentUUID": "34156c16-57db-4101-85f0-1669e048fbb0",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "90eac311-cf26-4d65-ab1e-11f45b7ae3fb",
                        "1c21d296-43b9-467c-9025-0fda9c635468",
                        "5e091819-80dc-49ca-b561-76c39a3faf7e"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 96437,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "ca727ae9-c854-4362-a6ca-45f4fc54e58e",
                      "title": "monthly recurring events",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "add monthly recurring event",
                          "fullTitle": "calendar functionality recurring events monthly recurring events add monthly recurring event",
                          "timedOut": null,
                          "duration": 22300,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.fillForm(_forms.eventForm, monthlyEvent);\ncy.recurringEventOption('Monthly');\ncy.saveEvent();\ncy.wait('@newCalID').then(xhr => {\n  cy.wait('@getActivities');\n  cy.get(recurringSelector(eventName)).should('have.length.at.least', 1);\n  cy.prevNextToggle('next');\n  cy.get('.fc-center > h2').should('have.text', (0, _moment.default)().add(1, 'months').format('MMMM YYYY'));\n  cy.get(recurringSelector(eventName)).should('have.length.at.least', 1);\n  cy.prevNextToggle('next');\n  cy.get('.fc-center > h2').should('have.text', (0, _moment.default)().add(2, 'months').format('MMMM YYYY'));\n  cy.get(recurringSelector(eventName)).should('have.length.at.least', 1);\n  cy.removeEventAPI(xhr.response.body, true, userData);\n});",
                          "err": {},
                          "uuid": "bf0e0c0d-714e-402b-8aa5-8cc152408a95",
                          "parentUUID": "ca727ae9-c854-4362-a6ca-45f4fc54e58e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "delete one monthly recurring event",
                          "fullTitle": "calendar functionality recurring events monthly recurring events delete one monthly recurring event",
                          "timedOut": null,
                          "duration": 38416,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const eventName = `MONTHLY ${(0, _helpers.stringGen)(6)}`;\nconst eventData = {\n  subscriberId: subscriberId,\n  globalUserId: salesRepGlobalUserId,\n  id: salesRepUserId,\n  userName: salesRepName,\n  name: eventName,\n  isAllDay: false,\n  isRecurring: true,\n  recurringOccurence: 'Monthly',\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 09:00`,\n  endTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 10:00`\n};\ncy.addRecurringEvent(eventData).then(response => {\n  cy.wait(2000);\n  const eventId = response.body;\n  cy.intercept({\n    method: 'GET',\n    url: `/api/CalendarEvent/GetCalendarEvent?calendarEventId=${eventId}&userId=${salesRepUserId}&subscriberId=${subscriberId}`\n  }).as('selectEvent');\n  cy.intercept(`/api/CalendarEvent/DeleteCalendarEvent/?calendarEventId=${eventId}&deleteRecurring=${false}&userId=${salesRepUserId}&subscriberId=${subscriberId}&cancellationEmails=false`).as('waitForDelete');\n  cy.intercept('/api/activity/GetActivitiesForCalendar/').as('getActivities');\n  cy.reload();\n  cy.wait('@getActivities');\n  cy.selectFirstRecurring(eventName);\n  cy.viewEventModalOverviewEditClose({\n    eventName: eventName,\n    type: 'edit'\n  });\n  cy.wait('@selectEvent');\n  cy.deleteEventOnCal('recurring', 'individual', eventName);\n  cy.wait('@waitForDelete');\n  cy.wait('@getActivities');\n  cy.reload();\n  cy.wait('@getActivities');\n  cy.get(recurringSelector(eventName)).should('have.length.lessThan', 2);\n  cy.prevNextToggle('next');\n  cy.get(recurringSelector(eventName)).should('have.length.at.most', 2).should('have.length.at.least', 1);\n  cy.removeEventAPI(eventId, true, userData);\n});",
                          "err": {},
                          "uuid": "6ff2cd9b-6193-4762-8885-37b5d00b2765",
                          "parentUUID": "ca727ae9-c854-4362-a6ca-45f4fc54e58e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "delete all monthly recurring events",
                          "fullTitle": "calendar functionality recurring events monthly recurring events delete all monthly recurring events",
                          "timedOut": null,
                          "duration": 33703,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const eventName = `MONTHLY ${(0, _helpers.stringGen)(6)}`;\nconst eventData = {\n  subscriberId: subscriberId,\n  globalUserId: salesRepGlobalUserId,\n  id: salesRepUserId,\n  userName: salesRepName,\n  name: eventName,\n  isAllDay: false,\n  isRecurring: true,\n  recurringOccurence: 'Monthly',\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 09:00`,\n  endTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 10:00`\n};\ncy.addRecurringEvent(eventData).then(response => {\n  const eventId = response.body;\n  cy.intercept({\n    method: 'GET',\n    url: `/api/CalendarEvent/GetCalendarEvent?calendarEventId=${eventId}&userId=${salesRepUserId}&subscriberId=${subscriberId}`\n  }).as('selectEvent');\n  cy.intercept(`/api/CalendarEvent/DeleteCalendarEvent/?calendarEventId=${eventId}&deleteRecurring=${true}&userId=${salesRepUserId}&subscriberId=${subscriberId}&cancellationEmails=false`).as('waitForDelete');\n  cy.intercept('/api/activity/GetActivitiesForCalendar/').as('getActivities');\n  cy.reload();\n  cy.wait('@getActivities');\n  cy.selectFirstRecurring(eventName);\n  cy.viewEventModalOverviewEditClose({\n    eventName: eventName,\n    type: 'edit'\n  });\n  cy.wait('@selectEvent');\n  cy.deleteEventOnCal('recurring', 'all', eventName);\n  cy.wait('@waitForDelete');\n  cy.wait('@getActivities');\n  cy.reload();\n  cy.wait('@getActivities');\n  cy.get(recurringSelector(eventName)).should('not.exist');\n  cy.prevNextToggle('next');\n  cy.get(recurringSelector(eventName)).should('not.exist');\n  cy.prevNextToggle('next');\n  cy.get(recurringSelector(eventName)).should('not.exist');\n});",
                          "err": {},
                          "uuid": "244a359a-65e7-4ee6-b1b6-df55fccafad6",
                          "parentUUID": "ca727ae9-c854-4362-a6ca-45f4fc54e58e",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "bf0e0c0d-714e-402b-8aa5-8cc152408a95",
                        "6ff2cd9b-6193-4762-8885-37b5d00b2765",
                        "244a359a-65e7-4ee6-b1b6-df55fccafad6"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 94419,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "3ae4920d-065e-456b-a41b-dc77c7608acf",
                  "title": "tasks",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "5b8ff80d-d722-4ecd-937a-6a21a10ada23",
                      "title": "functionality",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "add a task via calendar",
                          "fullTitle": "calendar functionality tasks functionality add a task via calendar",
                          "timedOut": null,
                          "duration": 21690,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.intercept({\n  url: '/api/task/SaveTask',\n  method: 'POST'\n}).as('saveTask');\nlet newTask = {\n  taskTitle: `New Task ${(0, _helpers.stringGen)(5)}`,\n  taskDescription: 'Test Task Description',\n  taskDueDate: (0, _moment.default)().format('MM/DD/YYYY')\n};\ncy.intercept({\n  url: '/api/activity/GetActivitiesForCalendar/',\n  method: 'POST'\n}).as('getActivities');\ncy.addTaskCalendar(newTask);\ncy.wait('@saveTask').then(xhr => {\n  cy.wait('@getActivities');\n  cy.get('.fc-month-view').contains(newTask.taskTitle);\n  cy.deleteTaskAPI(xhr.response.body, salesRepGlobalUserId, subscriberId);\n});",
                          "err": {},
                          "uuid": "29ad6168-aa26-42b3-8a42-96d70178c716",
                          "parentUUID": "5b8ff80d-d722-4ecd-937a-6a21a10ada23",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "remove task via calendar",
                          "fullTitle": "calendar functionality tasks functionality remove task via calendar",
                          "timedOut": null,
                          "duration": 25869,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.intercept('/api/activity/GetActivitiesForCalendar/').as('getActivities');\nconst taskData = {\n  subscriberId,\n  globalUserId: salesRepGlobalUserId,\n  taskName: `EVENT TASK ${(0, _helpers.stringGen)(4)}`,\n  dueDate: (0, _moment.default)().format('DD-MMM-YY')\n};\ncy.addTaskAPIUsers(taskData).then(response => {\n  cy.intercept(`/api/Task/GetTask?taskId=${response.body}&subscriberId=${subscriberId}`).as('getTask');\n  cy.visit(_urls.EVENT_LIST_URL);\n  cy.toggleFilters('tasks');\n  cy.get('.fc-month-view').contains(taskData.taskName).click();\n  cy.get('[data-cypress-id=\"task-view-button-edit\"]').click();\n  cy.wait('@getTask');\n  cy.get('#TaskAddEdit_btnTaskDelete').click();\n  cy.deleteModal('Delete Task!', 'Are you sure you want to delete this task?', 'delete');\n  cy.wait('@getActivities');\n  cy.get(`.fc-content:contains(\"${taskData.taskName}\")`).should('not.exist');\n});",
                          "err": {},
                          "uuid": "09a13e3f-55ea-44f7-90c1-ce82cf3be5cf",
                          "parentUUID": "5b8ff80d-d722-4ecd-937a-6a21a10ada23",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "29ad6168-aa26-42b3-8a42-96d70178c716",
                        "09a13e3f-55ea-44f7-90c1-ce82cf3be5cf"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 47559,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "c16abad3-454e-4f4b-838e-c012b7462009",
                      "title": "filtering",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "filter tasks and events",
                          "fullTitle": "calendar functionality tasks filtering filter tasks and events",
                          "timedOut": null,
                          "duration": 26217,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.toggleFilters('tasks');\nmonthviewTester(taskName);\nmonthviewTester(eventName);",
                          "err": {},
                          "uuid": "1a84b457-5196-429f-a1f3-a9a4ad5c8c40",
                          "parentUUID": "c16abad3-454e-4f4b-838e-c012b7462009",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "filter only tasks",
                          "fullTitle": "calendar functionality tasks filtering filter only tasks",
                          "timedOut": null,
                          "duration": 1669,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.toggleFilters('events');\nmonthviewTester(taskName);\nnotVisible(eventName);",
                          "err": {},
                          "uuid": "4a7a2f0f-1b73-42de-b3b8-a2e5b681b3d0",
                          "parentUUID": "c16abad3-454e-4f4b-838e-c012b7462009",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "filter only events",
                          "fullTitle": "calendar functionality tasks filtering filter only events",
                          "timedOut": null,
                          "duration": 9371,
                          "state": "passed",
                          "speed": "medium",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.toggleFilters('tasks');\ncy.toggleFilters('events');\nmonthviewTester(eventName);\nnotVisible(taskName);",
                          "err": {},
                          "uuid": "3344be7f-5cbd-4642-bbaf-364f3746b88c",
                          "parentUUID": "c16abad3-454e-4f4b-838e-c012b7462009",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "turn both filters off",
                          "fullTitle": "calendar functionality tasks filtering turn both filters off",
                          "timedOut": null,
                          "duration": 780,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.toggleFilters('events');\nnotVisible(taskName);\nnotVisible(eventName);",
                          "err": {},
                          "uuid": "4934abf2-aac9-4145-948a-1d558c7166d9",
                          "parentUUID": "c16abad3-454e-4f4b-838e-c012b7462009",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "1a84b457-5196-429f-a1f3-a9a4ad5c8c40",
                        "4a7a2f0f-1b73-42de-b3b8-a2e5b681b3d0",
                        "3344be7f-5cbd-4642-bbaf-364f3746b88c",
                        "4934abf2-aac9-4145-948a-1d558c7166d9"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 38037,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "c4eaabdf-f132-4b85-87a8-2a656e4dd688",
                "9493f6f0-12e6-4a4e-8377-97e0f24d1f42",
                "7739d852-a0f6-439c-bbce-63e340522259",
                "f1d347ce-0947-4b39-8f3d-8e04baca3387",
                "7e3ae1d2-99ff-4857-a6a9-ed566060b65a"
              ],
              "failures": [
                "eaf6ed85-a5e9-4e7e-913d-1d5e75720392"
              ],
              "pending": [],
              "skipped": [],
              "duration": 162751,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5d07b04c-778c-48f0-80c6-356d90f25d0f",
              "title": "event form",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "event name validation",
                  "fullTitle": "calendar event form event name validation",
                  "timedOut": null,
                  "duration": 5330,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.saveEvent();\ncy.eventFormValidation('eventName');",
                  "err": {},
                  "uuid": "da5ca830-a2d1-4de9-a175-e4fc1f7a7558",
                  "parentUUID": "5d07b04c-778c-48f0-80c6-356d90f25d0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "event guests invalid email validation",
                  "fullTitle": "calendar event form event guests invalid email validation",
                  "timedOut": null,
                  "duration": 6925,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.eventFormValidation('guestEmail');",
                  "err": {},
                  "uuid": "9413402e-d824-4292-a989-401f1b832dd9",
                  "parentUUID": "5d07b04c-778c-48f0-80c6-356d90f25d0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "changing event category changes time block colour",
                  "fullTitle": "calendar event form changing event category changes time block colour",
                  "timedOut": null,
                  "duration": 10548,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.eventTypeTimeBlockChange('colourChange');",
                  "err": {},
                  "uuid": "25200605-7645-40fd-92c4-494e62f1719e",
                  "parentUUID": "5d07b04c-778c-48f0-80c6-356d90f25d0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "changing event time moves time block",
                  "fullTitle": "calendar event form changing event time moves time block",
                  "timedOut": null,
                  "duration": 838,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.eventTypeTimeBlockChange('timeChange');",
                  "err": {},
                  "uuid": "42d567cc-c564-4f0a-a644-7f3dbe09beb2",
                  "parentUUID": "5d07b04c-778c-48f0-80c6-356d90f25d0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "add new event category and displays in dropdown with corresponding colours",
                  "fullTitle": "calendar event form add new event category and displays in dropdown with corresponding colours",
                  "timedOut": null,
                  "duration": 12726,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newCatName = `New Cat ${(0, _helpers.stringGen)(4)}`;\nconst colour = '#ff00ff';\ncy.request({\n  url: '/api/CalendarEvent/SaveEventCategory',\n  method: 'POST',\n  body: {\n    'SubscriberId': subscriberId,\n    'UpdateUserId': salesRepUserId,\n    'eventCategoryId': 0,\n    'CategoryColor': colour,\n    'CategoryName': newCatName\n  }\n}).then(response => {\n  const eventCatId = response.body;\n  cy.log(response.body);\n  cy.reload();\n  cy.openEventForm();\n  cy.log(eventCatId);\n  cy.dropAndVerifyCatDropdown('rgb(255, 0, 255)', newCatName);\n  cy.request({\n    url: `/api/CalendarEvent/DeleteEventCategory/?id=${eventCatId}&userId=${salesRepUserId}&subscriberId=${subscriberId}`,\n    method: 'GET'\n  });\n});",
                  "err": {},
                  "uuid": "348e4254-ada4-41fd-b7f8-421be6d26375",
                  "parentUUID": "5d07b04c-778c-48f0-80c6-356d90f25d0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "add attachment to event form",
                  "fullTitle": "calendar event form add attachment to event form",
                  "timedOut": null,
                  "duration": 5444,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.addAttachment();",
                  "err": {},
                  "uuid": "9d366ce8-c4eb-44dd-bdbf-01a88555127a",
                  "parentUUID": "5d07b04c-778c-48f0-80c6-356d90f25d0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "delete attachement from event",
                  "fullTitle": "calendar event form delete attachement from event",
                  "timedOut": null,
                  "duration": 1104,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.attachment .icon-Delete').click();\ncy.deleteModal('Delete Attachment!', 'Are you sure you want to delete this attachment?', 'delete');\ncy.get('.attachment:nth-of-type(2) .col-file-name a').should('not.exist');",
                  "err": {},
                  "uuid": "e9f07928-5900-432c-9f3e-2b48a9cbda27",
                  "parentUUID": "5d07b04c-778c-48f0-80c6-356d90f25d0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "close event form",
                  "fullTitle": "calendar event form close event form",
                  "timedOut": null,
                  "duration": 2361,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.closeEventForm();\ncy.wait(2000);\ncy.get('#divCalendarEventWrapper').should('not.be.visible');",
                  "err": {},
                  "uuid": "12fe8caf-73ba-4457-9f80-d662cc33129e",
                  "parentUUID": "5d07b04c-778c-48f0-80c6-356d90f25d0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "select date on calendar month view and see that date in event form",
                  "fullTitle": "calendar event form select date on calendar month view and see that date in event form",
                  "timedOut": null,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "ba7c427f-2ec9-44ce-9f18-369c077e2fc9",
                  "parentUUID": "5d07b04c-778c-48f0-80c6-356d90f25d0f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "da5ca830-a2d1-4de9-a175-e4fc1f7a7558",
                "9413402e-d824-4292-a989-401f1b832dd9",
                "25200605-7645-40fd-92c4-494e62f1719e",
                "42d567cc-c564-4f0a-a644-7f3dbe09beb2",
                "348e4254-ada4-41fd-b7f8-421be6d26375",
                "9d366ce8-c4eb-44dd-bdbf-01a88555127a",
                "e9f07928-5900-432c-9f3e-2b48a9cbda27",
                "12fe8caf-73ba-4457-9f80-d662cc33129e"
              ],
              "failures": [],
              "pending": [
                "ba7c427f-2ec9-44ce-9f18-369c077e2fc9"
              ],
              "skipped": [],
              "duration": 45276,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2eb525e6-8645-4240-a25e-e05ec2cf7b6a",
              "title": "calendar layout",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "1902c81a-f8f3-474d-af08-c9551ccfcd24",
                  "title": "week view",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "toggle to week view and container changes",
                      "fullTitle": "calendar calendar layout week view toggle to week view and container changes",
                      "timedOut": null,
                      "duration": 7567,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.toggleCalendarView('week');",
                      "err": {},
                      "uuid": "767d992c-80eb-4031-a79b-9ae46c20f817",
                      "parentUUID": "1902c81a-f8f3-474d-af08-c9551ccfcd24",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "toggle to past weeks",
                      "fullTitle": "calendar calendar layout week view toggle to past weeks",
                      "timedOut": null,
                      "duration": 401,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let dateFormat;\ntodayWeekFormat();\ncy.prevNextToggle('prev');\nif (from_date.format('MMM') !== todaysDate.startOf('week').subtract(1, 'weeks').format('MMM')) {\n  dateFormat = 'MMM D';\n} else {\n  dateFormat = 'D';\n}\nheaderSelector(`${from_date.subtract(1, 'weeks').format('MMM D')} – ${to_date.subtract(1, 'weeks').format(`${dateFormat}, YYYY`)}`);",
                      "err": {},
                      "uuid": "d41d2ec5-5a82-43ea-ac0a-877e0da11f0f",
                      "parentUUID": "1902c81a-f8f3-474d-af08-c9551ccfcd24",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "toggle to future weeks",
                      "fullTitle": "calendar calendar layout week view toggle to future weeks",
                      "timedOut": null,
                      "duration": 580,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let dateFormat; // comment while above is skipped\ncy.prevNextToggle('next');\ntodayWeekFormat();\ncy.prevNextToggle('next');\nif ((0, _moment.default)().endOf('week').format('MMM') !== (0, _moment.default)().endOf('week').add(1, 'weeks').format('MMM')) {\n  dateFormat = 'MMM D';\n} else {\n  dateFormat = 'D';\n}\ncy.log(dateFormat);\nheaderSelector(`${(0, _moment.default)().startOf('week').add(1, 'weeks').format('MMM D')} – ${(0, _moment.default)().endOf('week').add(1, 'weeks').format(`${dateFormat}, YYYY`)}`);",
                      "err": {},
                      "uuid": "83150091-0b68-4379-b11b-752907c5d7bc",
                      "parentUUID": "1902c81a-f8f3-474d-af08-c9551ccfcd24",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "select today button to return to current week",
                      "fullTitle": "calendar calendar layout week view select today button to return to current week",
                      "timedOut": null,
                      "duration": 314,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.prevNextToggle('today');\ntodayWeekFormat();",
                      "err": {},
                      "uuid": "eac0eb9f-023d-464e-abfa-f376197f4cff",
                      "parentUUID": "1902c81a-f8f3-474d-af08-c9551ccfcd24",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "add event and view in week view",
                      "fullTitle": "calendar calendar layout week view add event and view in week view",
                      "timedOut": null,
                      "duration": 12568,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.intercept({\n  method: 'POST',\n  url: '/api/CalendarEvent/SaveCalendarEvent'\n}).as('newCalID');\nconst eventData = {\n  timeFrom: '8:00 AM',\n  timeTo: '8:30 AM',\n  eventTime: '8:00 - 8:30',\n  eventTitle\n};\ncy.addEventOnCal(newEvent, false);\ncy.wait('@newCalID').then(xhr => {\n  // calId = xhr.response.body;\n  cy.verifyEvent('week', eventData);\n  cy.removeEventAPI(xhr.response.body, false, userData);\n});",
                      "err": {},
                      "uuid": "c0f3d1b3-fc2a-4ca7-b0b0-5084f486a9ff",
                      "parentUUID": "1902c81a-f8f3-474d-af08-c9551ccfcd24",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "767d992c-80eb-4031-a79b-9ae46c20f817",
                    "d41d2ec5-5a82-43ea-ac0a-877e0da11f0f",
                    "83150091-0b68-4379-b11b-752907c5d7bc",
                    "eac0eb9f-023d-464e-abfa-f376197f4cff",
                    "c0f3d1b3-fc2a-4ca7-b0b0-5084f486a9ff"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 21430,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "0e60c42a-d936-4983-8d5d-70a07acf7e9f",
                  "title": "day view",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "toggle to day view and container changes",
                      "fullTitle": "calendar calendar layout day view toggle to day view and container changes",
                      "timedOut": null,
                      "duration": 7600,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.toggleCalendarView('day');",
                      "err": {},
                      "uuid": "b56ba104-4951-4f05-aed3-11fc0fe36c7f",
                      "parentUUID": "0e60c42a-d936-4983-8d5d-70a07acf7e9f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "toggle to past days",
                      "fullTitle": "calendar calendar layout day view toggle to past days",
                      "timedOut": null,
                      "duration": 311,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todayDayFormat();\ncy.prevNextToggle('prev');\nheaderSelector((0, _moment.default)().subtract(1, 'days').format(dayDateFormat));",
                      "err": {},
                      "uuid": "0f86e8b0-fe2e-450e-b997-77c6386f147d",
                      "parentUUID": "0e60c42a-d936-4983-8d5d-70a07acf7e9f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "toggle to future days",
                      "fullTitle": "calendar calendar layout day view toggle to future days",
                      "timedOut": null,
                      "duration": 507,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.prevNextToggle('next');\ntodayDayFormat();\ncy.prevNextToggle('next');\nheaderSelector((0, _moment.default)().add(1, 'days').format(dayDateFormat));",
                      "err": {},
                      "uuid": "b517a195-e181-46b6-a339-fd000f83f57f",
                      "parentUUID": "0e60c42a-d936-4983-8d5d-70a07acf7e9f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "select today button to return to current day",
                      "fullTitle": "calendar calendar layout day view select today button to return to current day",
                      "timedOut": null,
                      "duration": 240,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.prevNextToggle('today');\ntodayDayFormat();",
                      "err": {},
                      "uuid": "9e0651d6-10b9-4f93-a8e2-e1fa2d773533",
                      "parentUUID": "0e60c42a-d936-4983-8d5d-70a07acf7e9f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "add event and view in day view",
                      "fullTitle": "calendar calendar layout day view add event and view in day view",
                      "timedOut": null,
                      "duration": 13300,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.intercept({\n  method: 'POST',\n  url: '/api/CalendarEvent/SaveCalendarEvent'\n}).as('newCalID');\nconst eventData = {\n  timeFrom: '8:00 AM',\n  timeTo: '8:30 AM',\n  eventTime: '8:00 - 8:30',\n  eventTitle\n};\ncy.addEventOnCal(newEvent, false);\ncy.wait('@newCalID').then(xhr => {\n  // calId = xhr.response.body;\n  cy.verifyEvent('day', eventData);\n  cy.removeEventAPI(xhr.response.body, false, userData);\n});",
                      "err": {},
                      "uuid": "219458b8-d1df-40c6-bd7e-ff59495264ac",
                      "parentUUID": "0e60c42a-d936-4983-8d5d-70a07acf7e9f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b56ba104-4951-4f05-aed3-11fc0fe36c7f",
                    "0f86e8b0-fe2e-450e-b997-77c6386f147d",
                    "b517a195-e181-46b6-a339-fd000f83f57f",
                    "9e0651d6-10b9-4f93-a8e2-e1fa2d773533",
                    "219458b8-d1df-40c6-bd7e-ff59495264ac"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 21958,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "00c1b52a-5045-46c1-bc95-68487ca47ff5",
                  "title": "month view",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "toggle to month view and container changes",
                      "fullTitle": "calendar calendar layout month view toggle to month view and container changes",
                      "timedOut": null,
                      "duration": 7435,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.toggleCalendarView('month');",
                      "err": {},
                      "uuid": "bc0da7e7-ccc2-4e0f-a98d-41d9ca15edf8",
                      "parentUUID": "00c1b52a-5045-46c1-bc95-68487ca47ff5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "toggle to past months",
                      "fullTitle": "calendar calendar layout month view toggle to past months",
                      "timedOut": null,
                      "duration": 437,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "monthFormat();\ncy.prevNextToggle('prev');\nheaderSelector((0, _moment.default)().subtract(1, 'months').format(monthDateFormat));",
                      "err": {},
                      "uuid": "466d5c75-6109-4b47-9aa9-0ba9b07ba86b",
                      "parentUUID": "00c1b52a-5045-46c1-bc95-68487ca47ff5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "toggle to future months",
                      "fullTitle": "calendar calendar layout month view toggle to future months",
                      "timedOut": null,
                      "duration": 10101,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.prevNextToggle('next');\nmonthFormat();\ncy.prevNextToggle('next');\nheaderSelector((0, _moment.default)().add(1, 'months').format(monthDateFormat));",
                      "err": {},
                      "uuid": "de8999a3-2c5f-4ba1-8f3b-0add0a7b5389",
                      "parentUUID": "00c1b52a-5045-46c1-bc95-68487ca47ff5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "select today button to return to current month",
                      "fullTitle": "calendar calendar layout month view select today button to return to current month",
                      "timedOut": null,
                      "duration": 2418,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.prevNextToggle('today');\nmonthFormat();",
                      "err": {},
                      "uuid": "6d78c588-f700-4083-88ce-c0fa6cc8d010",
                      "parentUUID": "00c1b52a-5045-46c1-bc95-68487ca47ff5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "add event and view in month view",
                      "fullTitle": "calendar calendar layout month view add event and view in month view",
                      "timedOut": null,
                      "duration": 14509,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.intercept({\n  method: 'POST',\n  url: '/api/CalendarEvent/SaveCalendarEvent'\n}).as('newCalID');\nconst eventData = {\n  timeFrom: '8:00 AM',\n  timeTo: '8:30 AM',\n  eventTime: '8a',\n  eventTitle\n};\ncy.addEventOnCal(newEvent, false);\ncy.wait('@newCalID').then(xhr => {\n  // calId = xhr.response.body;\n  cy.verifyEvent('month', eventData);\n  cy.removeEventAPI(xhr.response.body, false, userData);\n});",
                      "err": {},
                      "uuid": "ee3a6fbd-1c44-4d6b-99b5-343e3013108d",
                      "parentUUID": "00c1b52a-5045-46c1-bc95-68487ca47ff5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bc0da7e7-ccc2-4e0f-a98d-41d9ca15edf8",
                    "466d5c75-6109-4b47-9aa9-0ba9b07ba86b",
                    "de8999a3-2c5f-4ba1-8f3b-0add0a7b5389",
                    "6d78c588-f700-4083-88ce-c0fa6cc8d010",
                    "ee3a6fbd-1c44-4d6b-99b5-343e3013108d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 34900,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}